####################################
# File Data Core: /etc/nginx/nginx.conf
###################################################################
# Nginx Core + upstream
# Path: /etc/nginx/nginx.conf
# Docs: http://nginx.org/en/docs/ngx_core_module.html
# Docs: http://nginx.org/en/docs/http/ngx_http_upstream_module.html
# Docs: http://nginx.org/en/docs/http/load_balancing.html

user  nginx;
worker_processes  auto; # Default about CPU from node: worker_processes  auto;

error_log  /var/log/nginx/error.log debug;
pid        /var/run/nginx.pid;


events {
    worker_connections  8192; # Default worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Docs log_format: http://nginx.org/en/docs/varindex.html
    # Docs descriptions: https://www.javatpoint.com/nginx-variables
    log_format  main  '\n\t Headers List'
                      '\n\t remote_addr[$remote_addr],realip_remote_addr[$realip_remote_addr],remote_user[$remote_user],time_local[$time_local],request[$request]'
                      '\n\t status[$status],http_referer[$http_referer],server_protocol[$server_protocol]'
                      '\n\t http_user_agent[$http_user_agent],http_x_forwarded_for[$http_x_forwarded_for],http_method[$http_method]'
                      '\n\t proxy_host[$proxy_host],host[$host],http_host[$http_host],proxy_protocol_addr[$proxy_protocol_addr]'
                      '\n\t upstream_addr[$upstream_addr],upstream_bytes_received[$upstream_bytes_received],upstream_bytes_sent[$upstream_bytes_sent],upstream_status=[$upstream_status],upstream_http_location[$upstream_http_location]'
                      '\n\t upstream_cookie_name[$upstream_cookie_name],upstream_http_name[$upstream_http_name],upstream_trailer_name[$upstream_trailer_name]'
                      '\n\t bytes_sent[$bytes_sent[$bytes_sent],body_bytes_sent[$body_bytes_sent]'
                      '\n\t nginx_version[$nginx_version],hostname[$hostname],server_name[$server_name],server_addr[$server_addr]'
                      '\n\t uri[$uri],request_uri[$request_uri]'
                      '\n\t upstream_http_x_dns_question[$upstream_http_x_dns_question],upstream_http_x_dns_type[$upstream_http_x_dns_type]'
                      '\n\t upstream_http_x_dns_result[$upstream_http_x_dns_result],upstream_http_x_dns_answers[$upstream_http_x_dns_answers]'
                      '\n\t upstream_http_server[$upstream_http_server]'
                      '\n\t http_x_header[$http_x_header],query_string[$query_string],http_cookie[$http_cookie]'
                      '\n';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #gzip  on;

    # Load Balancer Methods
    #   round-robin(Default() — requests to the application servers are distributed in a round-robin fashion,
    #   least_connected — next request is assigned to the server with the least number of active connections,
    #   ip_hash — a hash-function is used to determine what server should be selected for the next request (based on the client’s IP address).
    #  server xxx max_fails=1 fail_timeout=30s;

    # upstream = Load Balancer of backend list or group servers to make proxy_pass
    #            The server name is transform into IP Address
    upstream lb_ms_auth {
        keepalive 60;
        server app-msauth-dev.azurewebsites.net:443;
    }

    upstream lb_ms_publication {
        keepalive 60;
        server app-mspublication01-dev.azurewebsites.net:443;
    }

    include /etc/nginx/conf.d/*.conf;
}